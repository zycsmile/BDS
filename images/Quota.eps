%!PS-Adobe-3.0 EPSF-3.0
%%Creator: MATLAB, The MathWorks, Inc. Version 8.1.0.604 (R2013a). Operating System: Microsoft Windows 7.
%%Title: X:\6 PieBridge\BDS\Quota.eps
%%CreationDate: 09/24/2017  11:49:00
%%DocumentNeededFonts: Helvetica
%%+ Helvetica-Bold
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox:   174   301   436   489
%%EndComments

%%BeginProlog
% MathWorks dictionary
/MathWorks 160 dict begin
% definition operators
/bdef {bind def} bind def
/ldef {load def} bind def
/xdef {exch def} bdef
/xstore {exch store} bdef
% operator abbreviations
/c  /clip ldef
/cc /concat ldef
/cp /closepath ldef
/gr /grestore ldef
/gs /gsave ldef
/mt /moveto ldef
/np /newpath ldef
/cm /currentmatrix ldef
/sm /setmatrix ldef
/rm /rmoveto ldef
/rl /rlineto ldef
/s {show newpath} bdef
/sc {setcmykcolor} bdef
/sr /setrgbcolor ldef
/sg /setgray ldef
/w /setlinewidth ldef
/j /setlinejoin ldef
/cap /setlinecap ldef
/rc {rectclip} bdef
/rf {rectfill} bdef
% page state control
/pgsv () def
/bpage {/pgsv save def} bdef
/epage {pgsv restore} bdef
/bplot /gsave ldef
/eplot {stroke grestore} bdef
% orientation switch
/portraitMode 0 def /landscapeMode 1 def /rotateMode 2 def
% coordinate system mappings
/dpi2point 0 def
% font control
/FontSize 0 def
/FMS {/FontSize xstore findfont [FontSize 0 0 FontSize neg 0 0]
  makefont setfont} bdef
/ISOLatin1Encoding where {pop /WindowsLatin1Encoding 256 array bdef
ISOLatin1Encoding WindowsLatin1Encoding copy pop
/.notdef/.notdef/quotesinglbase/florin/quotedblbase/ellipsis/dagger
/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE/.notdef/.notdef
/.notdef/.notdef/quoteleft/quoteright/quotedblleft/quotedblright/bullet
/endash/emdash/tilde/trademark/scaron/guilsinglright/oe/.notdef/.notdef
/Ydieresis WindowsLatin1Encoding 128 32 getinterval astore pop}
{/WindowsLatin1Encoding StandardEncoding bdef} ifelse
/reencode {exch dup where {pop load} {pop StandardEncoding} ifelse
  exch dup 3 1 roll findfont dup length dict begin
  { 1 index /FID ne {def}{pop pop} ifelse } forall
  /Encoding exch def currentdict end definefont pop} bdef
/isroman {findfont /CharStrings get /Agrave known} bdef
/FMSR {3 1 roll 1 index dup isroman {reencode} {pop pop} ifelse
  exch FMS} bdef
/csm {1 dpi2point div -1 dpi2point div scale neg translate
 dup landscapeMode eq {pop -90 rotate}
  {rotateMode eq {90 rotate} if} ifelse} bdef
% line types: solid, dotted, dashed, dotdash
/SO { [] 0 setdash } bdef
/DO { [.5 dpi2point mul 4 dpi2point mul] 0 setdash } bdef
/DA { [6 dpi2point mul] 0 setdash } bdef
/DD { [.5 dpi2point mul 4 dpi2point mul 6 dpi2point mul 4
  dpi2point mul] 0 setdash } bdef
% macros for lines and objects
/L {lineto stroke} bdef
/MP {3 1 roll moveto 1 sub {rlineto} repeat} bdef
/AP {{rlineto} repeat} bdef
/PDlw -1 def
/W {/PDlw currentlinewidth def setlinewidth} def
/PP {closepath eofill} bdef
/DP {closepath stroke} bdef
/MR {4 -2 roll moveto dup  0 exch rlineto exch 0 rlineto
  neg 0 exch rlineto closepath} bdef
/FR {MR stroke} bdef
/PR {MR fill} bdef
/L1i {{currentfile picstr readhexstring pop} image} bdef
/tMatrix matrix def
/MakeOval {newpath tMatrix currentmatrix pop translate scale
0 0 1 0 360 arc tMatrix setmatrix} bdef
/FO {MakeOval stroke} bdef
/PO {MakeOval fill} bdef
/PD {currentlinewidth 2 div 0 360 arc fill
   PDlw -1 eq not {PDlw w /PDlw -1 def} if} def
/FA {newpath tMatrix currentmatrix pop translate scale
  0 0 1 5 -2 roll arc tMatrix setmatrix stroke} bdef
/PA {newpath tMatrix currentmatrix pop	translate 0 0 moveto scale
  0 0 1 5 -2 roll arc closepath tMatrix setmatrix fill} bdef
/FAn {newpath tMatrix currentmatrix pop translate scale
  0 0 1 5 -2 roll arcn tMatrix setmatrix stroke} bdef
/PAn {newpath tMatrix currentmatrix pop translate 0 0 moveto scale
  0 0 1 5 -2 roll arcn closepath tMatrix setmatrix fill} bdef
/vradius 0 def /hradius 0 def /lry 0 def
/lrx 0 def /uly 0 def /ulx 0 def /rad 0 def
/MRR {/vradius xdef /hradius xdef /lry xdef /lrx xdef /uly xdef
  /ulx xdef newpath tMatrix currentmatrix pop ulx hradius add uly
  vradius add translate hradius vradius scale 0 0 1 180 270 arc 
  tMatrix setmatrix lrx hradius sub uly vradius add translate
  hradius vradius scale 0 0 1 270 360 arc tMatrix setmatrix
  lrx hradius sub lry vradius sub translate hradius vradius scale
  0 0 1 0 90 arc tMatrix setmatrix ulx hradius add lry vradius sub
  translate hradius vradius scale 0 0 1 90 180 arc tMatrix setmatrix
  closepath} bdef
/FRR {MRR stroke } bdef
/PRR {MRR fill } bdef
/MlrRR {/lry xdef /lrx xdef /uly xdef /ulx xdef /rad lry uly sub 2 div def
  newpath tMatrix currentmatrix pop ulx rad add uly rad add translate
  rad rad scale 0 0 1 90 270 arc tMatrix setmatrix lrx rad sub lry rad
  sub translate rad rad scale 0 0 1 270 90 arc tMatrix setmatrix
  closepath} bdef
/FlrRR {MlrRR stroke } bdef
/PlrRR {MlrRR fill } bdef
/MtbRR {/lry xdef /lrx xdef /uly xdef /ulx xdef /rad lrx ulx sub 2 div def
  newpath tMatrix currentmatrix pop ulx rad add uly rad add translate
  rad rad scale 0 0 1 180 360 arc tMatrix setmatrix lrx rad sub lry rad
  sub translate rad rad scale 0 0 1 0 180 arc tMatrix setmatrix
  closepath} bdef
/FtbRR {MtbRR stroke } bdef
/PtbRR {MtbRR fill } bdef
/stri 6 array def /dtri 6 array def
/smat 6 array def /dmat 6 array def
/tmat1 6 array def /tmat2 6 array def /dif 3 array def
/asub {/ind2 exch def /ind1 exch def dup dup
  ind1 get exch ind2 get sub exch } bdef
/tri_to_matrix {
  2 0 asub 3 1 asub 4 0 asub 5 1 asub
  dup 0 get exch 1 get 7 -1 roll astore } bdef
/compute_transform {
  dmat dtri tri_to_matrix tmat1 invertmatrix 
  smat stri tri_to_matrix tmat2 concatmatrix } bdef
/ds {stri astore pop} bdef
/dt {dtri astore pop} bdef
/db {2 copy /cols xdef /rows xdef mul dup 3 mul string
  currentfile 
  3 index 0 eq {/ASCIIHexDecode filter}
  {/ASCII85Decode filter 3 index 2 eq {/RunLengthDecode filter} if }
  ifelse exch readstring pop
  dup 0 3 index getinterval /rbmap xdef
  dup 2 index dup getinterval /gbmap xdef
  1 index dup 2 mul exch getinterval /bbmap xdef pop pop}bdef
/it {gs np dtri aload pop moveto lineto lineto cp c
  cols rows 8 compute_transform 
  rbmap gbmap bbmap true 3 colorimage gr}bdef
/il {newpath moveto lineto stroke}bdef
currentdict end def
%%EndProlog

%%BeginSetup
MathWorks begin

0 cap

end
%%EndSetup

%%Page: 1 1
%%BeginPageSetup
%%PageBoundingBox:   174   301   436   489
MathWorks begin
bpage
%%EndPageSetup

%%BeginObject: obj1
bplot

/dpi2point 12 def
portraitMode 2088 5868 csm

    0     0  3150  2250 rc
85 dict begin %Colortable dictionary
/c0 { 0.000000 0.000000 0.000000 sr} bdef
/c1 { 1.000000 1.000000 1.000000 sr} bdef
/c2 { 0.900000 0.000000 0.000000 sr} bdef
/c3 { 0.000000 0.820000 0.000000 sr} bdef
/c4 { 0.000000 0.000000 0.800000 sr} bdef
/c5 { 0.910000 0.820000 0.320000 sr} bdef
/c6 { 1.000000 0.260000 0.820000 sr} bdef
/c7 { 0.000000 0.820000 0.820000 sr} bdef
c0
1 j
1 sg
   0    0 3151 2251 rf
6 w
0 1683 2384 0 0 -1683 467 1852 4 MP
PP
-2384 0 0 1683 2384 0 0 -1683 467 1852 5 MP stroke
4 w
DO
0 sg
 467 1852 mt  467  169 L
 467  169 mt  467  169 L
 864 1852 mt  864  169 L
 864  169 mt  864  169 L
1261 1852 mt 1261  169 L
1261  169 mt 1261  169 L
1659 1852 mt 1659  169 L
1659  169 mt 1659  169 L
2056 1852 mt 2056  169 L
2056  169 mt 2056  169 L
2453 1852 mt 2453  169 L
2453  169 mt 2453  169 L
2851 1852 mt 2851  169 L
2851  169 mt 2851  169 L
 467 1852 mt 2851 1852 L
2851 1852 mt 2851 1852 L
 467 1711 mt 2851 1711 L
2851 1711 mt 2851 1711 L
 467 1571 mt 2851 1571 L
2851 1571 mt 2851 1571 L
 467 1431 mt 2851 1431 L
2851 1431 mt 2851 1431 L
 467 1291 mt 2851 1291 L
2851 1291 mt 2851 1291 L
 467 1150 mt 2851 1150 L
2851 1150 mt 2851 1150 L
 467 1010 mt 2851 1010 L
2851 1010 mt 2851 1010 L
 467  870 mt 2851  870 L
2851  870 mt 2851  870 L
 467  730 mt 2851  730 L
2851  730 mt 2851  730 L
 467  589 mt 2851  589 L
2851  589 mt 2851  589 L
 467  449 mt 2851  449 L
2851  449 mt 2851  449 L
 467  309 mt 2851  309 L
2851  309 mt 2851  309 L
 467  169 mt 2851  169 L
2851  169 mt 2851  169 L
SO
6 w
 467  169 mt 2851  169 L
 467 1852 mt 2851 1852 L
2851 1852 mt 2851  169 L
 467 1852 mt  467  169 L
 467 1852 mt 2851 1852 L
 467 1852 mt  467  169 L
 467 1852 mt  467 1828 L
 467  169 mt  467  192 L
%%IncludeResource: font Helvetica
/Helvetica /WindowsLatin1Encoding 144 FMSR

 427 2020 mt 
(0) s
 864 1852 mt  864 1828 L
 864  169 mt  864  192 L
 824 2020 mt 
(5) s
1261 1852 mt 1261 1828 L
1261  169 mt 1261  192 L
1181 2020 mt 
(10) s
1659 1852 mt 1659 1828 L
1659  169 mt 1659  192 L
1579 2020 mt 
(15) s
2056 1852 mt 2056 1828 L
2056  169 mt 2056  192 L
1976 2020 mt 
(20) s
2453 1852 mt 2453 1828 L
2453  169 mt 2453  192 L
2373 2020 mt 
(25) s
2851 1852 mt 2851 1828 L
2851  169 mt 2851  192 L
2771 2020 mt 
(30) s
 467 1852 mt  490 1852 L
2851 1852 mt 2827 1852 L
 352 1905 mt 
(0) s
 467 1711 mt  490 1711 L
2851 1711 mt 2827 1711 L
 352 1764 mt 
(1) s
 467 1571 mt  490 1571 L
2851 1571 mt 2827 1571 L
 352 1624 mt 
(2) s
 467 1431 mt  490 1431 L
2851 1431 mt 2827 1431 L
 352 1484 mt 
(3) s
 467 1291 mt  490 1291 L
2851 1291 mt 2827 1291 L
 352 1344 mt 
(4) s
 467 1150 mt  490 1150 L
2851 1150 mt 2827 1150 L
 352 1203 mt 
(5) s
 467 1010 mt  490 1010 L
2851 1010 mt 2827 1010 L
 352 1063 mt 
(6) s
 467  870 mt  490  870 L
2851  870 mt 2827  870 L
 352  923 mt 
(7) s
 467  730 mt  490  730 L
2851  730 mt 2827  730 L
 352  783 mt 
(8) s
 467  589 mt  490  589 L
2851  589 mt 2827  589 L
 352  642 mt 
(9) s
 467  449 mt  490  449 L
2851  449 mt 2827  449 L
 272  502 mt 
(10) s
 467  309 mt  490  309 L
2851  309 mt 2827  309 L
 272  362 mt 
(11) s
 467  169 mt  490  169 L
2851  169 mt 2827  169 L
 272  222 mt 
(12) s
 467  169 mt 2851  169 L
 467 1852 mt 2851 1852 L
2851 1852 mt 2851  169 L
 467 1852 mt  467  169 L
gs 467 169 2385 1684 rc
36 w
/c8 { 1.000000 0.000000 0.000000 sr} bdef
c8
1 0 8 0 8 0 8 0 8 0 8 0 8 0 8 0 
8 0 8 0 8 0 8 0 8 0 8 0 8 0 8 0 
8 0 8 0 8 0 7 0 8 0 8 0 8 0 8 0 
8 0 8 0 8 0 8 0 8 0 8 0 8 0 8 0 
8 0 8 0 8 0 8 0 8 0 8 0 7 0 8 0 
8 0 8 0 8 0 8 0 8 0 8 0 8 0 8 0 
8 0 8 0 8 0 8 0 8 0 8 0 8 0 8 0 
8 0 7 0 8 0 8 0 8 0 8 0 8 0 8 0 
8 0 8 0 8 0 8 0 8 0 8 0 8 0 8 0 
8 0 8 0 8 0 7 0 8 0 8 0 8 0 8 0 
8 0 8 0 8 0 8 0 8 0 8 0 8 0 8 0 
8 0 8 0 8 0 8 0 8 0 8 0 7 0 8 0 
8 0 8 0 8 0 8 0 8 0 8 0 8 0 8 0 
8 0 8 0 8 0 8 0 8 0 8 0 8 0 8 0 
8 0 7 0 8 0 8 0 8 0 8 0 8 0 8 0 
8 0 8 0 8 0 8 0 8 0 8 0 8 0 8 0 
8 0 8 0 8 0 8 0 7 0 8 0 8 0 8 0 
8 0 8 0 8 0 8 0 8 0 8 0 8 0 8 0 
8 0 8 0 8 0 8 0 8 0 8 0 7 0 8 0 
8 0 8 0 8 0 8 0 8 0 8 0 8 0 8 0 
8 0 8 0 8 0 8 0 8 0 8 0 8 0 8 0 
8 0 7 0 8 0 8 0 8 0 8 0 8 0 8 0 
8 0 8 0 8 0 8 0 8 0 8 0 8 0 8 0 
8 0 8 0 8 0 8 0 7 0 8 0 8 0 8 0 
8 0 8 0 8 0 8 0 8 0 8 0 8 0 8 0 
8 0 8 0 8 0 8 0 8 0 8 0 8 0 7 0 
8 0 8 0 8 0 8 0 8 0 8 0 8 0 8 0 
8 0 8 0 8 0 8 0 8 0 8 0 8 0 8 0 
8 0 7 0 8 0 8 0 8 0 8 0 8 0 8 0 
8 0 8 0 8 0 8 0 8 0 8 0 8 0 8 0 
8 0 8 0 8 0 8 0 7 0 8 0 8 0 8 0 
8 0 8 0 8 0 8 0 8 0 8 0 8 0 8 0 
8 0 8 0 8 0 8 0 8 0 8 0 8 0 7 0 
8 0 8 0 8 0 8 0 8 0 8 0 8 0 8 0 
8 0 8 0 8 0 8 0 8 0 8 0 8 0 8 0 
8 0 8 0 7 0 8 0 8 0 8 0 8 0 8 0 
8 0 8 0 8 0 8 0 8 0 8 0 8 0 8 0 
8 0 8 0 8 0 482 449 300 MP stroke
8 0 7 0 467 449 3 MP stroke
DD
/c9 { 0.000000 0.000000 1.000000 sr} bdef
c9
6 6 8 7 8 4 8 3 8 2 8 1 8 0 8 -1 
7 0 8 -1 8 0 8 0 8 0 8 1 8 2 8 2 
8 2 8 3 8 4 8 3 8 4 8 5 8 4 8 5 
8 5 8 6 8 6 7 5 8 6 8 6 8 6 8 7 
8 6 8 6 8 6 8 7 8 7 8 6 8 7 8 7 
8 8 8 7 8 8 8 8 8 9 7 9 8 9 8 10 
8 11 8 11 8 12 8 13 8 13 8 14 8 15 8 15 
8 15 8 16 8 16 8 17 8 16 8 16 8 16 8 17 
7 15 8 16 8 15 8 15 8 14 8 13 8 13 8 11 
8 12 8 10 8 10 8 10 8 10 8 10 8 9 8 11 
8 10 8 11 8 12 7 12 8 12 8 12 8 12 8 12 
8 12 8 11 8 11 8 10 8 9 8 9 8 9 8 7 
8 7 8 7 8 6 8 6 8 5 8 5 7 4 8 4 
8 4 8 4 8 4 8 4 8 4 8 5 8 4 8 5 
8 5 8 6 8 5 8 6 8 6 8 5 8 6 8 5 
7 5 8 5 8 5 8 4 8 4 8 4 8 4 8 5 
8 4 8 4 8 4 8 4 8 5 8 5 8 4 8 5 
8 5 8 4 8 5 7 4 8 4 8 4 8 3 8 4 
8 3 8 3 8 3 8 3 8 3 8 3 8 2 8 3 
8 3 8 3 8 3 8 3 8 3 8 3 7 2 8 2 
8 2 8 2 8 2 8 1 8 2 8 1 8 1 8 1 
8 2 8 1 8 2 8 2 8 2 8 2 8 2 8 3 
8 2 7 2 8 2 8 2 8 1 8 1 8 1 8 1 
8 0 8 0 8 1 8 0 8 1 8 1 8 1 8 2 
8 2 8 3 8 3 7 3 8 3 8 4 8 4 8 4 
8 5 8 4 8 5 8 5 8 4 8 5 8 4 8 3 
8 3 8 3 8 1 8 1 8 0 8 -1 7 -1 8 0 
8 -1 8 0 8 1 8 2 8 3 8 5 8 6 8 7 
8 7 8 8 8 8 8 9 8 8 8 7 8 7 8 6 
8 5 7 4 8 2 8 1 8 -1 8 -3 8 -4 8 -6 
8 -8 8 -11 8 -11 8 -12 8 -10 8 -9 8 -5 8 -2 
8 4 8 10 8 16 8 25 7 29 8 30 8 27 8 22 
8 12 8 -2 8 -18 8 -39 8 -62 8 -89 8 -111 8 -127 
8 -139 8 -145 8 -145 8 -140 8 -129 8 -114 7 -92 467 1812 272 MP stroke
gr

36 w
c9
DD
0 sg
%%IncludeResource: font Helvetica-Bold
/Helvetica-Bold /WindowsLatin1Encoding 180 FMSR

1283 2207 mt 
(Time \(m\)) s
 176 1625 mt  -90 rotate
(Bandwidth \(G\)) s
90 rotate
%%IncludeResource: font Helvetica
/Helvetica /WindowsLatin1Encoding 120 FMSR

 450 1895 mt 
( ) s
2835  211 mt 
( ) s
SO
6 w
1 sg
0 390 1781 0 0 -390 527 1793 4 MP
PP
-1781 0 0 390 1781 0 0 -390 527 1793 5 MP stroke
4 w
DO
SO
6 w
0 sg
 527 1403 mt 2308 1403 L
 527 1793 mt 2308 1793 L
2308 1793 mt 2308 1403 L
 527 1793 mt  527 1403 L
 527 1793 mt 2308 1793 L
 527 1793 mt  527 1403 L
 527 1403 mt 2308 1403 L
 527 1793 mt 2308 1793 L
2308 1793 mt 2308 1403 L
 527 1793 mt  527 1403 L
%%IncludeResource: font Helvetica
/Helvetica /WindowsLatin1Encoding 144 FMSR

 993 1562 mt 
(Upper Limit for BDS) s
gs 527 1403 1782 391 rc
36 w
c8
358 0 598 1510 2 MP stroke
gr

36 w
c8
0 sg
 993 1737 mt 
(BDS Real Usage) s
gs 527 1403 1782 391 rc
DD
c9
358 0 598 1685 2 MP stroke
SO
6 w
gr

6 w
c9

end %%Color Dict

eplot
%%EndObject

epage
end

showpage

%%Trailer
%%EOF
